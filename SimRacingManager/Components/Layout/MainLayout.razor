@using SimRacingManager.Core
@using SimRacingManager.Data
@using SimRacingManager.Miscellaneous

@inherits LayoutComponentBase

@* Required *@
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudPopoverProvider />

<MudDialogProvider /> @* Needed for dialogs *@
<MudSnackbarProvider /> @* Needed for snackbars *@

@* TODO: Need to fix all warnings during a build *@

<MudLayout>
    <MudAppBar>
        <MudBadge Content="CurrentVersion" Overlap="true" Class="mx-6 my-4">
            <MudText Typo="Typo.h5">
                Sim Racing Manager
            </MudText>
        </MudBadge>
        <MudSpacer/>
        <MudTooltip Text="@(_isDarkMode ? "Light Mode" : "Dark Mode")" Arrow="true" Placement="Placement.Bottom">
            <MudToggleIconButton @bind-Toggled="_isDarkMode" Icon="@Icons.Material.Outlined.DarkMode" Color="@Color.Inherit" ToggledColor="@Color.Default" ToggledIcon="@Icons.Material.Filled.LightMode" /> @* TODO: Make it so you can choose Auto as an option as well, so the theme matches your system's theme *@
        </MudTooltip>
        <MudText Align="Align.End">@_currentDate.ToShortDateString()</MudText>
    </MudAppBar>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="pt-8">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private DateTime _currentDate = DateTime.Today;
    private const string CurrentVersion = "PRE-ALPHA";
    
    private MudTheme _theme = new();
    private bool _isDarkMode; // TODO: Need to make it so this theme is stored in local storage, so it doesn't reset the next time you browse to the page.
    
    protected override void OnInitialized()
    {
        // Everything within this conditional shouldn't be called more than once.
        if (!Globals.HasDatabaseManagerBeenInitialised)
        {
            // If the .env file cannot be found, don't bother making a connection to the database.
            if (DotEnv.SearchForEnvironmentFiles())
            {
                DatabaseManager.Initialise();
                DatabaseManager.FetchAllData();
            }
        }

        Globals.HasDatabaseManagerBeenInitialised = true;
    }
}